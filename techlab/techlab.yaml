apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-html
  namespace: argocd
data:
  index.html: |
<html lang="en">
  <head>
  <meta charset="UTF-8" />
  <title>GitOps - K8s/ArgoCD - TechLab - Beni Dhomi</title>
  <style>
    body {
      margin: 0; height: 100vh;
      background: #010a12;
      color: #0ff;
      font-family: 'Orbitron', monospace, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .box {
      border: 2px solid #0ff;
      padding: 20px 30px;
      border-radius: 12px;
      box-shadow: 0 0 15px #0ff;
      text-align: center;
      letter-spacing: 0.1em;
    }
    h1 {
      margin: 0 0 10px;
      font-weight: 700;
      font-size: 1.8em;
    }
    p {
      margin: 0;
      font-size: 1em;
      color: #0cc;
    }
  </style>
  </head>
  <body>
    <div class="box">
      <h1>Hartelijke groet'n van Techlab in Kubernetes!</h1>
      <p>HTML komt uit de ConfigMap. - versie: 4a</p>
    </div>
  </body>
</html>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: argocd
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          env:
            - name: VERSION
              value: "1.0.4a" # vervang dit met je eigen versie
            - name: TAG
              value: "techlab-04a"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: html-volume
          configMap:
            name: custom-html

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-frontend
  namespace: argocd
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80        # service port
      targetPort: 80  # container port
      nodePort: 30081 # pick a port in 30000-32767